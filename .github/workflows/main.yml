# This is a basic workflow to help you get started with Actions

name: node_CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  
  
  
  build:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        - uses: actions/checkout@v2
        - name: Use Node.js
          uses: actions/setup-node@v2
          with: 
            node-version: "14.x"

        - name: Install dependencies
          run: npm install

        - name: Run test
          run: npm test
          
          
          
  push_to_Docker_Hub:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      # build docker image and push to docker hub
      # only if the app build and test successfully
      needs: [build]

      steps:
        - name: checkout repo
          uses: actions/checkout@v2

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v1
      
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        
        - name: Login to GitHub Container Registry
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.REG_TOKEN }}
            
        - name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: |
              ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-demo:latest
              ghcr.io/${{ github.repository_owner }}/nodejs-demo:latest
          
#        - name: Send email on failed docker image build
#          if: ${{ failure() }}
#          uses: dawidd6/action-send-mail@v3.6.0
#          with:
#            server_address: mail.csdesign.hu
#            server_port: 587
#            # Optional (recommended): mail server username:
#            username: ${{secrets.MAIL_USERNAME}}
#            # Optional (recommended) mail server password:
#            password: ${{secrets.MAIL_PASSWORD}}
#            subject: Github Actions job FAILED!!!
#            to: csordasm@starschema.net
#            from: Martin@GitHub Actions
#            body: Build job of ${{github.repository}} FAILED!
        - name: Send custom JSON data to Slack workflow
          if: always()
          id: slack
          uses: slackapi/slack-github-action@v1.18.0
          with:
          # This data can be any valid JSON from a previous step in the GitHub Action
            payload: |
              {
                "text": "${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}"
              }
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          
        
        - name: Run the image in a container
          uses: addnab/docker-run-action@v3
          with:
            image: ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-demo:latest
            run: |
              echo "runing the docker image"
              echo "Testing the nodejs  app endpoints"
              echo ${{ steps.docker_build.outputs.digest }}
  
              
              
              
              
  owasp_test_and_send_mail:
    runs-on: ubuntu-latest
    needs: [push_to_Docker_Hub]
    steps:
        - name: OWASP ZAP Full Scan
          uses: zaproxy/action-full-scan@v0.3.0
          with:
              target: http://csdesign.hu:3000/test/
        - name: Send email on success
          uses: dawidd6/action-send-mail@v3.6.0
          with:
            server_address: mail.csdesign.hu
            server_port: 587
            # Optional (recommended): mail server username:
            username: ${{secrets.MAIL_USERNAME}}
            # Optional (recommended) mail server password:
            password: ${{secrets.MAIL_PASSWORD}}
            subject: "Github Actions job was successful"
            to: csordasm@starschema.net
            from: Martin@GitHub Actions
            body: Build job of ${{github.repository}} completed successfully! 
            attachments: zap_scan.zip,report_html.html
        
      
